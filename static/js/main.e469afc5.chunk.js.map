{"version":3,"sources":["components/Post/Post.js","components/Loading/Loading.js","utils.js","WebApi.js","redux/reducers/posts.js","pages/HomePages/HomePage.js","constants/standard.js","pages/AboutPages/AboutPage.js","redux/reducers/users.js","components/Form/Form.js","pages/LoginPages/LoginPage.js","pages/SignupPages/SignupPage.js","pages/NewPostPages/NewPostPage.js","pages/SinglePostPages/SinglePostPage.js","components/MyPost/MyPost.js","pages/MyPostPages/MyPostPage.js","pages/UpdatePostPages/UpdatePostPage.js","components/Navbar/Navbar.js","components/App/App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["PostItem","styled","div","props","theme","colors","primaryDark","primaryDarker","PostTitle","Link","tertiary","PostDate","tertiaryLight","Post","post","to","id","title","Date","createdAt","toLocaleDateString","LoadingDiv","loading","Loading","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","postsReducer","createSlice","name","initialState","posts","byUserId","isPostLoading","totalCount","reducers","setPosts","state","action","payload","setSinglePost","setByUserId","setIsPostLoading","setTotalCount","actions","getPostsCount","dispatch","fetch","then","res","json","length","catch","err","console","log","getPosts","page","limit","getPostsApi","getPost","getSinglePostsApi","getByUserId","userId","myPostApi","updatePost","postId","body","method","headers","authorization","JSON","stringify","updatePostApi","deletePost","deletePostApi","Wrapper","PostsWrapper","wrapper","large","PaginationWrapper","PaginationButton","button","secondaryDark","$active","HomePage","useDispatch","totalPostsCount","useSelector","store","useState","currentPage","setCurrentPage","pages","useEffect","Math","ceil","i","push","map","onClick","handlePageClick","TITLE_STANDARD","CUSTOM_INPUT_FOCUS","AboutTitle","primary","AboutContent","AboutPage","usersReducer","user","isLoading","setUser","setIsUserLoading","login","username","password","loginApi","userVertification","getMe","getUser","signup","nickname","signupApi","FormWrapper","form","medium","FormTitle","FormItem","FormItemInput","input","FormSubmitButton","Error","Form","formName","history","useHistory","setUsername","setPassword","setNickname","errorMessage","setErrorMessage","onSubmit","e","preventDefault","ok","message","data","handleFormSubmit","type","value","onChange","target","LoginPage","PostWrapper","secondaryLight","secondary","PostContent","textarea","NewPostPage","setTitle","content","setContent","users","canSave","Boolean","newPostApi","placeholder","rows","disabled","SinglePostPage","slug","useParams","PostUpdateButton","PostDeleteButton","MyPost","MyPostPage","postsByUserId","UpdatePostPage","NavbarWrapper","primaryLight","HomeButton","NavbarButtonWrapper","isUserLoading","NavbarButton","AboutButton","LoginButton","LogoutButton","SignUpButton","Navbar","location","useLocation","pathname","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ReactDOM","render","primaryLighter","document","getElementById"],"mappings":"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","file":"static/js/main.e469afc5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PostItem = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border: 2px solid ${(props) => props.theme.colors.primaryDark};\r\n  border-radius: 5px;\r\n  width: 100%;\r\n\r\n  & + & {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 4px 6px -4px ${(props) => props.theme.colors.primaryDarker};\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  flex: 1;\r\n  font-size: 22px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  margin-left: 5px;\r\n  width: 84px;\r\n  font-size: 16px;\r\n  text-align: left;\r\n  color: ${(props) => props.theme.colors.tertiaryLight};\r\n`;\r\n\r\nexport default function Post({ post }) {\r\n  return (\r\n    <PostItem>\r\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\r\n    </PostItem>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst LoadingDiv = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  line-height: 100vh;\r\n  background: transparent;\r\n  text-align: center;\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: ${(props) => props.theme.colors.loading};\r\n`;\r\n\r\nexport default function Loading() {\r\n  return <LoadingDiv>Loading...</LoadingDiv>;\r\n}\r\n","const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\r\n\r\nexport const getPostsApi = (page, limit) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limit}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const getAllPostsApi = () => {\r\n  return fetch(`${BASE_URL}/posts`).then((res) => res.json());\r\n};\r\n\r\nexport const getSinglePostsApi = (id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const newPostApi = (title, body) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const myPostApi = (userId) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&userId=${userId}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const updatePostApi = (id, title, body) => {\r\n  console.log(\"enter updatePostApi ====\");\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deletePostApi = (id) => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      id,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const loginApi = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMe = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const signupApi = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  getPostsApi,\r\n  getSinglePostsApi,\r\n  myPostApi,\r\n  deletePostApi,\r\n  getAllPostsApi,\r\n  updatePostApi,\r\n} from \"../../WebApi\";\r\n\r\nexport const postsReducer = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    posts: [],\r\n    post: null,\r\n    byUserId: [],\r\n    isPostLoading: false,\r\n    totalCount: null,\r\n  },\r\n  reducers: {\r\n    // (state, action) => new state\r\n    setPosts: (state, action) => {\r\n      state.posts = action.payload;\r\n    },\r\n\r\n    setSinglePost: (state, action) => {\r\n      state.post = action.payload;\r\n    },\r\n\r\n    setByUserId: (state, action) => {\r\n      state.byUserId = action.payload;\r\n    },\r\n\r\n    setIsPostLoading: (state, action) => {\r\n      state.isPostLoading = action.payload;\r\n    },\r\n\r\n    setTotalCount: (state, action) => {\r\n      state.totalCount = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setPosts,\r\n  setSinglePost,\r\n  setByUserId,\r\n  setIsPostLoading,\r\n  setTotalCount,\r\n} = postsReducer.actions;\r\n\r\n// thunk async logic\r\nexport const getPostsCount = () => (dispatch) => {\r\n  getAllPostsApi()\r\n    .then((res) => {\r\n      dispatch(setTotalCount(res.length));\r\n    })\r\n    .catch((err) => console.log(\"err\", err));\r\n};\r\n\r\nexport const getPosts = (page, limit) => (dispatch) => {\r\n  getPostsApi(page, limit)\r\n    .then((res) => {\r\n      dispatch(setPosts(res));\r\n    })\r\n    .catch((err) => console.log(\"err\", err));\r\n};\r\n\r\nexport const getPost = (id) => (dispatch) => {\r\n  getSinglePostsApi(id)\r\n    .then((res) => dispatch(setSinglePost(res)))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getByUserId = (userId) => (dispatch) => {\r\n  myPostApi(userId)\r\n    .then((res) => dispatch(setByUserId(res)))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updatePost = (postId, title, body) => (dispatch) => {\r\n  updatePostApi(postId, title, body)\r\n    .then((res) => dispatch(setSinglePost(res)))\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deletePost = (postId) => (dispatch) => {\r\n  dispatch(setIsPostLoading(true));\r\n  deletePostApi(postId).then(() => {\r\n    dispatch(setIsPostLoading(false));\r\n  });\r\n};\r\n\r\nexport default postsReducer.reducer;\r\n","import styled from \"styled-components\";\r\n\r\nimport Post from \"../../components/Post\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPosts, getPostsCount } from \"../../redux/reducers/posts\";\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst PostsWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 50px auto;\r\n  max-width: ${(props) => props.theme.wrapper.large};\r\n  height: 420px;\r\n`;\r\n\r\nconst PaginationWrapper = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: -50px;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-width: 360px;\r\n  justify-content: center;\r\n`;\r\n\r\nconst PaginationButton = styled.button`\r\n  text-decoration: none;\r\n  background: ${(props) => props.theme.colors.primaryDarker};\r\n  color: white;\r\n  cursor: pointer;\r\n  border: none;\r\n  outline: none;\r\n  width: 24px;\r\n  height: 24px;\r\n  text-align: center;\r\n\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  &:hover {\r\n    background: ${(props) => props.theme.colors.secondaryDark};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    border: 1px solid ${props.theme.colors.primaryDarker};\r\n    color: ${props.theme.colors.primaryDarker};\r\n    background: white;\r\n  `}\r\n`;\r\n\r\nexport default function HomePage() {\r\n  const dispatch = useDispatch();\r\n  const totalPostsCount = useSelector((store) => store.posts.totalCount);\r\n  const posts = useSelector((store) => store.posts.posts);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pages = [];\r\n  const limit = 5;\r\n\r\n  // 一開始拿所有的 posts 和總數\r\n  useEffect(() => {\r\n    dispatch(getPostsCount());\r\n    dispatch(getPosts(currentPage, limit));\r\n  }, [dispatch, currentPage]);\r\n\r\n  const length = Math.ceil(totalPostsCount / limit);\r\n  for (let i = 1; i <= length; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  const handlePageClick = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {posts && posts.length === 0 && <Loading />}\r\n      <PostsWrapper>\r\n        {posts &&\r\n          posts.length > 0 &&\r\n          posts.map((post) => <Post key={post.id} post={post} />)}\r\n      </PostsWrapper>\r\n      <PaginationWrapper>\r\n        {pages.map((page) => (\r\n          <PaginationButton\r\n            key={page}\r\n            $active={page === currentPage}\r\n            onClick={() => handlePageClick(page)}\r\n          >\r\n            {page}\r\n          </PaginationButton>\r\n        ))}\r\n      </PaginationWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n","// AboutPage 和 Form 都會用到\r\n// 不確定可不可以這樣包\r\nexport const TITLE_STANDARD = `\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n  padding-bottom: 10px;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    bottom: 0px;\r\n    width: 160px;\r\n    border-bottom: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const CUSTOM_INPUT_FOCUS = `\r\n  box-sizing: border-box;\r\n  margin-bottom: 20px;\r\n  padding: 5px;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  &::placeholder {\r\n    font-style: italic;\r\n    color: gray;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { TITLE_STANDARD } from \"../../constants/standard\";\r\n\r\nconst Wrapper = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  max-width: ${(props) => props.theme.wrapper.large};\r\n  border: 2px solid ${(props) => props.theme.colors.primaryDark};\r\n  border-radius: 5px;\r\n  text-align: center;\r\n`;\r\n\r\nconst AboutTitle = styled.div`\r\n  ${TITLE_STANDARD}\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n\r\n  &:after {\r\n    border-bottom: 1px solid ${(props) => props.theme.colors.primary};\r\n  }\r\n`;\r\n\r\nconst AboutContent = styled.div`\r\n  font-size: 16px;\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n`;\r\n\r\nexport default function AboutPage() {\r\n  return (\r\n    <Wrapper>\r\n      <AboutTitle>About Me</AboutTitle>\r\n      <AboutContent>沒有自拍照的部落格就是好的部落格。</AboutContent>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { loginApi, getMe, signupApi } from \"../../WebApi\";\r\n\r\nexport const usersReducer = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    user: null,\r\n    isLoading: true,\r\n  },\r\n  reducers: {\r\n    // (state, action) => new state\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    setIsUserLoading: (state, action) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, setIsUserLoading } = usersReducer.actions;\r\n\r\n// thunk async logic\r\nexport const login = (username, password) => () => {\r\n  return loginApi(username, password);\r\n};\r\n\r\nexport const userVertification = () => () => {\r\n  return getMe();\r\n};\r\n\r\nexport const getUser = (user) => (dispatch) => {\r\n  dispatch(setUser(user));\r\n};\r\n\r\nexport const signup = (nickname, username, password) => () => {\r\n  return signupApi(nickname, username, password);\r\n};\r\n\r\nexport default usersReducer.reducer;\r\n","import styled from \"styled-components\";\r\nimport { TITLE_STANDARD } from \"../../constants/standard\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { setAuthToken } from \"../../utils\";\r\n\r\nimport {\r\n  login,\r\n  userVertification,\r\n  signup,\r\n  getUser,\r\n} from \"../../redux/reducers/users\";\r\n\r\nconst FormWrapper = styled.form`\r\n  margin: 50px auto;\r\n  padding: 20px 60px;\r\n  max-width: ${(props) => props.theme.wrapper.medium};\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst FormTitle = styled.div`\r\n  ${TITLE_STANDARD}\r\n`;\r\n\r\nconst FormItem = styled.div`\r\n  & + & {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nconst FormItemInput = styled.input`\r\n  box-sizing: border-box;\r\n  margin-top: 5px;\r\n  width: 100%;\r\n`;\r\n\r\nconst FormSubmitButton = styled.button`\r\n  display: block;\r\n  margin: 50px auto 20px auto;\r\n  padding: 5px 0;\r\n  width: 160px;\r\n  background: black;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  position: absolute;\r\n  color: red;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport default function Form({ formName }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (formName === \"Log In\") {\r\n      dispatch(login(username, password)).then((res) => {\r\n        if (res.ok !== 1) {\r\n          setErrorMessage(res.message);\r\n        } else {\r\n          setAuthToken(res.token);\r\n          dispatch(userVertification()).then((res) => {\r\n            if (res.ok !== 1) {\r\n              setErrorMessage(res.message);\r\n            } else {\r\n              dispatch(getUser(res.data));\r\n              history.push(\"/\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else if (formName === \"Sign Up\") {\r\n      // sign up logic\r\n      dispatch(signup(nickname, username, password)).then((res) => {\r\n        if (res.ok !== 1) {\r\n          setErrorMessage(res.message);\r\n        } else {\r\n          setAuthToken(res.token);\r\n          dispatch(userVertification()).then((res) => {\r\n            if (res.ok !== 1) {\r\n              setErrorMessage(res.message);\r\n            } else {\r\n              dispatch(getUser(res.data));\r\n              history.push(\"/\");\r\n            }\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      console.log(\"不知名表單\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormWrapper onSubmit={(e) => handleFormSubmit(e)}>\r\n      <FormTitle>{formName}</FormTitle>\r\n      {formName === \"Sign Up\" && (\r\n        <FormItem>\r\n          nickname:\r\n          <FormItemInput\r\n            type=\"text\"\r\n            value={nickname}\r\n            onChange={(e) => setNickname(e.target.value)}\r\n          />\r\n        </FormItem>\r\n      )}\r\n      <FormItem>\r\n        username:\r\n        <FormItemInput\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </FormItem>\r\n      <FormItem>\r\n        password:\r\n        <FormItemInput\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </FormItem>\r\n      {errorMessage && <Error>{errorMessage}</Error>}\r\n      <FormSubmitButton>送出</FormSubmitButton>\r\n    </FormWrapper>\r\n  );\r\n}\r\n","import Form from \"../../components/Form\";\r\n\r\nexport default function LoginPage() {\r\n  return <Form formName=\"Log In\" />;\r\n}\r\n","import Form from \"../../components/Form\";\r\n\r\nexport default function LoginPage() {\r\n  return <Form formName=\"Sign Up\" />;\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { CUSTOM_INPUT_FOCUS } from \"../../constants/standard\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { newPostApi } from \"../../WebApi\";\r\n\r\nconst PostWrapper = styled.form`\r\n  box-sizing: border-box;\r\n  margin: 50px auto;\r\n  padding: 60px;\r\n  max-width: ${(props) => props.theme.wrapper.large};\r\n  border: 2px solid ${(props) => props.theme.colors.primaryDark};\r\n  border-radius: 5px;\r\n  background: ${(props) => props.theme.colors.secondaryLight};\r\n`;\r\n\r\nconst PostTitle = styled.input`\r\n  font-size: 20px;\r\n  border: 0.5px solid ${(props) => props.theme.colors.primaryDark};\r\n  background: ${(props) => props.theme.colors.secondary};\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n\r\n  &:focus {\r\n    box-shadow: 0px 0px 0px 1px ${(props) => props.theme.colors.primaryDark};\r\n  }\r\n\r\n  ${CUSTOM_INPUT_FOCUS}\r\n`;\r\n\r\nconst PostContent = styled.textarea`\r\n  font-size: 14px;\r\n  border: 0.5px solid ${(props) => props.theme.colors.primaryDark};\r\n  background: ${(props) => props.theme.colors.secondary};\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n\r\n  &:focus {\r\n    box-shadow: 0px 0px 0px 1px ${(props) => props.theme.colors.primaryDark};\r\n  }\r\n\r\n  ${CUSTOM_INPUT_FOCUS}\r\n`;\r\n\r\nconst FormSubmitButton = styled.button`\r\n  display: block;\r\n  margin: auto;\r\n  padding: 5px 0;\r\n  width: 160px;\r\n  background: ${(props) => props.theme.colors.primaryDark};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n\r\n  transition: all 0.5s ease-out;\r\n\r\n  &:disabled {\r\n    opacity: 0;\r\n    cursor: auto;\r\n  }\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const user = useSelector((store) => store.users.user);\r\n\r\n  const handleNewPostSubmit = (e) => {\r\n    e.preventDefault();\r\n    newPostApi(title, content).then((res) => {\r\n      history.push(`/posts/${res.id}`);\r\n    });\r\n  };\r\n\r\n  const canSave = Boolean(title) && Boolean(content) && Boolean(user);\r\n\r\n  return (\r\n    <PostWrapper onSubmit={handleNewPostSubmit}>\r\n      <PostTitle\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Title...\"\r\n      />\r\n      <PostContent\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        rows=\"20\"\r\n        placeholder=\"Content...\"\r\n      />\r\n      <FormSubmitButton disabled={!canSave}>送出</FormSubmitButton>\r\n    </PostWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getPost, setSinglePost } from \"../../redux/reducers/posts\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst PostWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 50px auto;\r\n  padding: 60px;\r\n  max-width: ${(props) => props.theme.wrapper.large};\r\n  border: 2px solid ${(props) => props.theme.colors.primaryDark};\r\n  border-radius: 5px;\r\n  background: white;\r\n`;\r\n\r\nconst PostTitle = styled.div`\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid ${(props) => props.theme.colors.primary};\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  margin-top: 20px;\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  text-align: justify;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nexport default function SinglePostPage() {\r\n  const dispatch = useDispatch();\r\n  const { slug } = useParams(); // id\r\n  const post = useSelector((store) => store.posts.post);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(slug));\r\n    return dispatch(setSinglePost(null));\r\n  }, [slug, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {!post && <Loading />}\r\n      {post && (\r\n        <PostWrapper>\r\n          <div>\r\n            <PostTitle>{post.title}</PostTitle>\r\n            <PostContent>{post.body}</PostContent>\r\n          </div>\r\n        </PostWrapper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport { deletePost } from \"../../redux/reducers/posts\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst PostItem = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border: 2px solid ${(props) => props.theme.colors.primaryDark};\r\n  border-radius: 5px;\r\n  width: 100%;\r\n\r\n  & + & {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 4px 6px -4px ${(props) => props.theme.colors.primaryDarker};\r\n  }\r\n`;\r\n\r\nconst PostTitle = styled(Link)`\r\n  flex: 1;\r\n  font-size: 22px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst PostDate = styled.div`\r\n  margin-left: 5px;\r\n  width: 84px;\r\n  font-size: 16px;\r\n  text-align: left;\r\n  color: ${(props) => props.theme.colors.tertiaryLight};\r\n`;\r\n\r\nconst PostUpdateButton = styled.button`\r\n  margin-left: 5px;\r\n  padding: 5px;\r\n  background: white;\r\n  color: ${(props) => props.theme.colors.primaryDarker};\r\n  outline: none;\r\n  border: 1px solid ${(props) => props.theme.colors.primaryDarker};\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${(props) => props.theme.colors.primaryDarker};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst PostDeleteButton = styled(PostUpdateButton)``;\r\n\r\nexport default function MyPost({ post }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleDeleteClick = () => {\r\n    dispatch(deletePost(post.id));\r\n  };\r\n\r\n  const handleUpdateClick = (id) => {\r\n    history.push(`/update-post/${id}`);\r\n  };\r\n\r\n  return (\r\n    <PostItem>\r\n      <PostTitle to={`/posts/${post.id}`}>{post.title}</PostTitle>\r\n      <PostDate>{new Date(post.createdAt).toLocaleDateString()}</PostDate>\r\n      <PostUpdateButton onClick={() => handleUpdateClick(post.id)}>\r\n        編輯\r\n      </PostUpdateButton>\r\n      <PostDeleteButton onClick={handleDeleteClick}>刪除</PostDeleteButton>\r\n    </PostItem>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport MyPost from \"../../components/MyPost\";\r\n\r\nimport { getByUserId } from \"../../redux/reducers/posts\";\r\n\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst PostsWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  margin: 50px auto;\r\n  max-width: ${(props) => props.theme.wrapper.large};\r\n`;\r\n\r\nexport default function MyPostPage() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((store) => store.users.user);\r\n  const postsByUserId = useSelector((store) => store.posts.byUserId);\r\n  // 因為想要刪除後畫面重設才多設定 isPostLaoding\r\n  // 但會 true 和 false 的時候都會抓一次，還不知怎麼解決\r\n  // （本來想根據 postsByUserId，但會無限 loop）\r\n  const isPostLoading = useSelector((store) => store.posts.isPostLoading);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      // 根據目前登入的 userId 拿該 user 的文章\r\n      dispatch(getByUserId(user.id));\r\n    }\r\n  }, [dispatch, isPostLoading, user]); // 一開始拿到的 user 會是 null，等拿到 user 再 ren 一次\r\n\r\n  return (\r\n    <PostsWrapper>\r\n      {!user && <Loading />}\r\n      {user &&\r\n        postsByUserId &&\r\n        postsByUserId.length > 0 &&\r\n        postsByUserId.map((post) => <MyPost key={post.id} post={post} />)}\r\n    </PostsWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { CUSTOM_INPUT_FOCUS } from \"../../constants/standard\";\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getPost, updatePost } from \"../../redux/reducers/posts\";\r\n\r\nconst PostWrapper = styled.form`\r\n  box-sizing: border-box;\r\n  margin: 50px auto;\r\n  padding: 60px;\r\n  max-width: ${(props) => props.theme.wrapper.large};\r\n  border: 2px solid ${(props) => props.theme.colors.primaryDark};\r\n  border-radius: 5px;\r\n  background: ${(props) => props.theme.colors.secondaryLight};\r\n`;\r\n\r\nconst PostTitle = styled.input`\r\n  font-size: 20px;\r\n  border: 0.5px solid ${(props) => props.theme.colors.primaryDark};\r\n  background: ${(props) => props.theme.colors.secondary};\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n\r\n  &:focus {\r\n    box-shadow: 0px 0px 0px 1px ${(props) => props.theme.colors.primaryDark};\r\n  }\r\n\r\n  ${CUSTOM_INPUT_FOCUS}\r\n`;\r\n\r\nconst PostContent = styled.textarea`\r\n  font-size: 14px;\r\n  border: 0.5px solid ${(props) => props.theme.colors.primaryDark};\r\n  background: ${(props) => props.theme.colors.secondary};\r\n  color: ${(props) => props.theme.colors.tertiary};\r\n\r\n  &:focus {\r\n    box-shadow: 0px 0px 0px 1px ${(props) => props.theme.colors.primaryDark};\r\n  }\r\n\r\n  ${CUSTOM_INPUT_FOCUS}\r\n`;\r\n\r\nconst FormSubmitButton = styled.button`\r\n  display: block;\r\n  margin: auto;\r\n  padding: 5px 0;\r\n  width: 160px;\r\n  background: ${(props) => props.theme.colors.primaryDark};\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n\r\n  transition: all 0.5s ease-out;\r\n\r\n  &:disabled {\r\n    opacity: 0;\r\n    cursor: auto;\r\n  }\r\n`;\r\n\r\nexport default function UpdatePostPage() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { slug } = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const post = useSelector((store) => store.posts.post);\r\n  const user = useSelector((store) => store.users.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(slug));\r\n  }, [dispatch, slug]);\r\n\r\n  const handleUpdatePostSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updatePost(slug, title, content));\r\n    history.push(`/posts/${slug}`);\r\n  };\r\n\r\n  // 參考 Redux 文件的，防止使用者沒登入或沒輸入內容就送出\r\n  const canSave = Boolean(title) && Boolean(content) && Boolean(user);\r\n\r\n  return (\r\n    <PostWrapper onSubmit={handleUpdatePostSubmit}>\r\n      <PostTitle\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        type=\"text\"\r\n        placeholder={post && post.title}\r\n      />\r\n      <PostContent\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n        rows=\"20\"\r\n        placeholder={post && post.body}\r\n      />\r\n      <FormSubmitButton disabled={!canSave}>送出</FormSubmitButton>\r\n    </PostWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { setAuthToken } from \"../../utils\";\r\n\r\nimport {\r\n  getUser,\r\n  userVertification,\r\n  setIsUserLoading,\r\n} from \"../../redux/reducers/users\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst NavbarWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  padding-left: 20px;\r\n  background: ${(props) => props.theme.colors.primaryLight};\r\n  box-shadow: inset 0px -4px 3px -4px\r\n    ${(props) => props.theme.colors.primaryDark};\r\n\r\n  height: 60px;\r\n`;\r\n\r\nconst HomeButton = styled(Link)`\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 26px;\r\n  font-style: italic;\r\n  font-weight: bold;\r\n  text-shadow: 2px 2px ${(props) => props.theme.colors.primaryDark};\r\n  color: white;\r\n  outline: none;\r\n  line-height: 60px;\r\n`;\r\n\r\nconst NavbarButtonWrapper = styled.div`\r\n  display: flex;\r\n\r\n  ${(props) =>\r\n    props.isUserLoading &&\r\n    `\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nconst NavbarButton = styled(Link)`\r\n  position: relative;\r\n  width: 120px;\r\n  border-right: 3px solid ${(props) => props.theme.colors.primaryDark};\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.colors.secondary};\r\n\r\n  background: ${(props) => props.theme.colors.primary};\r\n  border-top-left-radius: 25px;\r\n  border-top-right-radius: 25px;\r\n  line-height: 40px;\r\n  height: 40px;\r\n\r\n  ${(props) =>\r\n    props.$active &&\r\n    `\r\n    background: ${props.theme.colors.secondary};\r\n    color: ${props.theme.colors.primary};\r\n  `}\r\n\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 5px;\r\n    transform: translateX(-50%);\r\n    left: 50%;\r\n    border-bottom: 2px solid ${(props) => props.theme.colors.primaryLight};\r\n    width: 0;\r\n    transition: all 0.5s linear;\r\n  }\r\n\r\n  &:hover {\r\n    &:after {\r\n      width: 80%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AboutButton = styled(NavbarButton)``;\r\nconst LoginButton = styled(NavbarButton)``;\r\nconst LogoutButton = styled(NavbarButton)``;\r\nconst SignUpButton = styled(NavbarButton)``;\r\n\r\nexport default function Navbar() {\r\n  const user = useSelector((store) => store.users.user);\r\n  const isUserLoading = useSelector((store) => store.users.isLoading);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  // 因為在 refresh 的時候 store 會被初始化...暫且先這樣\r\n  useEffect(() => {\r\n    // dispatch(setIsUserLoading(true));\r\n    // navbar 會先跳出登入畫面 -> 要設置 loading\r\n    dispatch(userVertification()).then((res) => {\r\n      dispatch(getUser(res.data));\r\n      dispatch(setIsUserLoading(false));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const handleLogoutClick = () => {\r\n    setAuthToken(\"\");\r\n    dispatch(getUser(null));\r\n    if (location.pathname !== \"/\") history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <NavbarWrapper>\r\n      <HomeButton to=\"/\">Blog</HomeButton>\r\n      <NavbarButtonWrapper isUserLoading={isUserLoading}>\r\n        <AboutButton $active={location.pathname === \"/about\"} to=\"/about\">\r\n          關於我\r\n        </AboutButton>\r\n        {!user && (\r\n          <SignUpButton $active={location.pathname === \"/signup\"} to=\"/signup\">\r\n            註冊\r\n          </SignUpButton>\r\n        )}\r\n        {!user && (\r\n          <LoginButton $active={location.pathname === \"/login\"} to=\"/login\">\r\n            登入\r\n          </LoginButton>\r\n        )}\r\n        {user && (\r\n          <LoginButton $active={location.pathname === \"/my-post\"} to=\"/my-post\">\r\n            我的文章\r\n          </LoginButton>\r\n        )}\r\n        {user && (\r\n          <LoginButton\r\n            $active={location.pathname === \"/add-new-post\"}\r\n            to=\"/add-new-post\"\r\n          >\r\n            新增文章\r\n          </LoginButton>\r\n        )}\r\n        {user && <LogoutButton onClick={handleLogoutClick}>登出</LogoutButton>}\r\n      </NavbarButtonWrapper>\r\n    </NavbarWrapper>\r\n  );\r\n}\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport HomePage from \"../../pages/HomePages\";\nimport AboutPage from \"../../pages/AboutPages\";\nimport LoginPage from \"../../pages/LoginPages\";\nimport SignupPage from \"../../pages/SignupPages\";\nimport NewPostPage from \"../../pages/NewPostPages\";\nimport SinglePostPage from \"../../pages/SinglePostPages\";\nimport MyPostPage from \"../../pages/MyPostPages\";\nimport UpdatePostPage from \"../../pages/UpdatePostPages\";\n\nimport Navbar from \"../Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n        <Route path=\"/about\">\n          <AboutPage />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/signup\">\n          <SignupPage />\n        </Route>\n        <Route path=\"/add-new-post\">\n          <NewPostPage />\n        </Route>\n        <Route path=\"/posts/:slug\">\n          <SinglePostPage />\n        </Route>\n        <Route path=\"/my-post\">\n          <MyPostPage />\n        </Route>\n        <Route path=\"/update-post/:slug\">\n          <UpdatePostPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport postsReducer from \"./reducers/posts\";\r\nimport usersReducer from \"./reducers/users\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    posts: postsReducer,\r\n    users: usersReducer,\r\n  },\r\n});\r\n\r\n// This tells Redux that we want our top-level state object to have a field named posts inside,\r\n// and all the data for state.posts will be updated by the postsReducer function when actions are dispatched.\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst theme = {\n  colors: {\n    primaryLighter: \"#f7e8d5\",\n    primaryLight: \"#f9ebdf\",\n    primary: \"#FFBA84\",\n    primaryDark: \"#E98B2A\",\n    primaryDarker: \"#dc5034\",\n    secondaryLight: \"#FCFAF2\",\n    secondary: \"#fafafa\",\n    secondaryDark: \"#F7C242\",\n    tertiaryLight: \"#EBB471\",\n    tertiary: \"#994639\",\n    loading: \"#B54434\",\n  },\n  wrapper: {\n    large: \"760px\",\n    medium: \"420px\",\n  },\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}